/**
 * H√†m ti·ªán √≠ch ƒë·ªÉ x·ª≠ l√Ω authentication v√† token management
 */

/**
 * X√≥a t·∫•t c·∫£ tokens Salesforce kh·ªèi localStorage
 * S·ª≠ d·ª•ng chung cho logout v√† error handling khi token expired
 */
export const clearSalesforceTokens = () => {
    console.log('üóëÔ∏è Clearing Salesforce tokens from localStorage');

    // X√≥a t·∫•t c·∫£ tokens v√† th√¥ng tin li√™n quan
    localStorage.removeItem('salesforce_access_token');
    localStorage.removeItem('salesforce_instance_url');
    localStorage.removeItem('salesforce_refresh_token');
    localStorage.removeItem('salesforce_token_expires_at');

    console.log('‚úÖ Salesforce tokens cleared successfully');
};

/**
 * Ki·ªÉm tra xem user c√≥ ƒëang ƒë∆∞·ª£c authenticated kh√¥ng
 */
export const isAuthenticated = () => {
    const accessToken = localStorage.getItem('salesforce_access_token');
    const expiresAt = localStorage.getItem('salesforce_token_expires_at');

    if (!accessToken || !expiresAt) {
        return false;
    }

    // Ki·ªÉm tra xem token c√≥ c√≤n h·∫°n kh√¥ng
    const now = new Date().getTime();
    const expireTime = parseInt(expiresAt);

    return now < expireTime;
};

/**
 * L·∫•y access token hi·ªán t·∫°i
 */
export const getAccessToken = () => {
    return localStorage.getItem('salesforce_access_token');
};

/**
 * L·∫•y instance URL hi·ªán t·∫°i
 */
export const getInstanceUrl = () => {
    return localStorage.getItem('salesforce_instance_url');
};

/**
 * L∆∞u tokens v√†o localStorage
 */
export const setTokens = (accessToken, instanceUrl, refreshToken, expiresIn) => {
    console.log('üíæ Saving Salesforce tokens to localStorage');

    localStorage.setItem('salesforce_access_token', accessToken);
    localStorage.setItem('salesforce_instance_url', instanceUrl);

    if (refreshToken) {
        localStorage.setItem('salesforce_refresh_token', refreshToken);
    }

    if (expiresIn) {
        // T√≠nh th·ªùi gian h·∫øt h·∫°n (hi·ªán t·∫°i + expiresIn seconds)
        const expiresAt = new Date().getTime() + (expiresIn * 1000);
        localStorage.setItem('salesforce_token_expires_at', expiresAt.toString());
    }

    console.log('‚úÖ Salesforce tokens saved successfully');
};

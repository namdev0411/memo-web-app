import { useState, useEffect } from 'react';

export const useAuthenticated = () => {
    // Kh·ªüi t·∫°o v·ªõi null ƒë·ªÉ ph√¢n bi·ªát "ch∆∞a check" vs "ƒë√£ check"
    const [isAuthenticated, setIsAuthenticated] = useState(null);

    useEffect(() => {
        console.log('üîë Ki·ªÉm tra tr·∫°ng th√°i x√°c th·ª±c...');

        // Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p hay ch∆∞a
        const token = localStorage.getItem('salesforce_access_token');
        const expiresAt = localStorage.getItem('salesforce_token_expires_at');

        console.log('üîë Ki·ªÉm tra access token:', token ? 'C√≥' : 'Kh√¥ng c√≥');

        if (token) {
            // Ki·ªÉm tra token c√≥ h·∫øt h·∫°n kh√¥ng
            if (expiresAt && Date.now() > parseInt(expiresAt)) {
                console.log('‚è∞ Token ƒë√£ h·∫øt h·∫°n');
                localStorage.removeItem('salesforce_access_token');
                localStorage.removeItem('salesforce_instance_url');
                localStorage.removeItem('salesforce_refresh_token');
                localStorage.removeItem('salesforce_token_expires_at');
                setIsAuthenticated(false);
            } else {
                setIsAuthenticated(true);
            }
        } else {
            setIsAuthenticated(false);
        }
    }, []); // Ch·ªâ ch·∫°y 1 l·∫ßn khi component mount

    // Tr·∫£ v·ªÅ null n·∫øu ch∆∞a check xong, ƒë·ªÉ tr√°nh flash
    return isAuthenticated;
};